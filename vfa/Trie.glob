DIGEST 721de265a745ceb5f99c1c5c15673709
FVFA.Trie
R3293:3310 Coq.Strings.String <> <> lib
R3337:3340 VFA.Perm <> <> lib
R3367:3370 VFA.Maps <> <> lib
mod 3414:3421 <> VerySlow
def 3434:3437 VerySlow loop
R3447:3450 Coq.Init.Datatypes <> list ind
R3452:3454 Coq.Init.Datatypes <> nat ind
R3461:3463 Coq.Init.Datatypes <> nat ind
R3474:3482 VFA.Maps <> total_map def
R3484:3487 Coq.Init.Datatypes <> bool ind
R3492:3494 Coq.Init.Datatypes <> nat ind
R3507:3511 VFA.Trie <> input var
R3522:3524 Coq.Init.Datatypes <> nil constr
R3529:3529 VFA.Trie <> c var
R3536:3537 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3547:3551 VFA.Trie <> table var
R3621:3624 VFA.Trie <> loop def
R3632:3639 VFA.Maps <> t_update def
R3649:3652 Coq.Init.Datatypes <> true constr
R3641:3645 VFA.Trie <> table var
R3629:3629 VFA.Trie <> c var
R3578:3581 VFA.Trie <> loop def
R3592:3596 VFA.Trie <> table var
R3588:3588 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3587:3587 VFA.Trie <> c var
def 3673:3682 VerySlow collisions
R3692:3695 Coq.Init.Datatypes <> list ind
R3697:3699 Coq.Init.Datatypes <> nat ind
R3704:3706 Coq.Init.Datatypes <> nat ind
R3718:3721 VFA.Trie VerySlow loop def
R3732:3738 VFA.Maps <> t_empty def
R3740:3744 Coq.Init.Datatypes <> false constr
R3723:3727 VFA.Trie <> input var
def 3757:3769 VerySlow collisions_pi
R3800:3802 Coq.Init.Logic <> :type_scope:x_'='_x not
R3772:3781 VFA.Trie VerySlow collisions def
R3783:3783 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R3785:3785 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R3787:3787 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R3789:3789 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R3791:3791 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R3793:3793 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R3795:3795 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R3797:3797 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R3799:3799 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R4611:4617 Coq.Arith.PeanoNat Nat eqb def
R4949:4956 VFA.Trie VerySlow <> mod
mod 5398:5405 <> Integers
ind 5459:5466 Integers positive
constr 5481:5482 Integers xI
constr 5511:5512 Integers xO
constr 5541:5542 Integers xH
R5494:5497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5498:5505 VFA.Trie <> positive ind
R5486:5493 VFA.Trie <> positive ind
R5524:5527 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5528:5535 VFA.Trie <> positive ind
R5516:5523 VFA.Trie <> positive ind
R5546:5553 VFA.Trie <> positive ind
def 5740:5742 Integers ten
R5747:5748 VFA.Trie Integers xO constr
R5751:5752 VFA.Trie Integers xI constr
R5755:5756 VFA.Trie Integers xO constr
R5758:5759 VFA.Trie Integers xH constr
def 5827:5838 Integers positive2nat
R5844:5851 VFA.Trie Integers positive ind
R5856:5858 Coq.Init.Datatypes <> nat ind
R5871:5871 VFA.Trie <> p var
R5882:5883 VFA.Trie Integers xI constr
R5891:5893 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5895:5897 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5898:5909 VFA.Trie <> positive2nat def
R5917:5918 VFA.Trie Integers xO constr
R5926:5928 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5930:5932 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5933:5944 VFA.Trie <> positive2nat def
R5952:5953 VFA.Trie Integers xH constr
R5983:5994 VFA.Trie Integers positive2nat def
R5996:5998 VFA.Trie Integers ten def
def 6198:6212 Integers print_in_binary
R6218:6225 VFA.Trie Integers positive ind
R6230:6233 Coq.Init.Datatypes <> list ind
R6235:6237 Coq.Init.Datatypes <> nat ind
R6250:6250 VFA.Trie <> p var
R6261:6262 VFA.Trie Integers xI constr
R6286:6289 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6269:6283 VFA.Trie <> print_in_binary def
R6290:6290 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R6292:6292 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R6298:6299 VFA.Trie Integers xO constr
R6322:6325 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6305:6319 VFA.Trie <> print_in_binary def
R6326:6326 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R6328:6328 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R6334:6335 VFA.Trie Integers xH constr
R6340:6340 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R6342:6342 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R6367:6381 VFA.Trie Integers print_in_binary def
R6383:6385 VFA.Trie Integers ten def
R6554:6555 VFA.Trie Integers xI constr
not 6542:6542 Integers ::x_'~'_'1'
R6636:6637 VFA.Trie Integers xO constr
not 6624:6624 Integers ::x_'~'_'0'
R6704:6706 VFA.Trie Integers ten def
def 7384:7387 Integers succ
R7402:7402 VFA.Trie <> x var
R7416:7417 VFA.Trie Integers ::x_'~'_'1' not
R7422:7422 VFA.Trie Integers ::x_'~'_'0' not
R7429:7431 VFA.Trie Integers ::x_'~'_'0' not
R7423:7426 VFA.Trie <> succ def
R7440:7441 VFA.Trie Integers ::x_'~'_'0' not
R7447:7448 VFA.Trie Integers ::x_'~'_'1' not
R7456:7457 VFA.Trie Integers xH constr
R7464:7465 VFA.Trie Integers ::x_'~'_'0' not
R7462:7463 VFA.Trie Integers xH constr
def 7585:7588 Integers addc
R7598:7601 Coq.Init.Datatypes <> bool ind
R7610:7617 VFA.Trie Integers positive ind
R7633:7640 VFA.Trie Integers positive ind
R7663:7663 VFA.Trie <> y var
R7660:7660 VFA.Trie <> x var
R7653:7657 VFA.Trie <> carry var
R7676:7680 Coq.Init.Datatypes <> false constr
R7684:7685 VFA.Trie Integers ::x_'~'_'1' not
R7689:7690 VFA.Trie Integers ::x_'~'_'1' not
R7695:7695 VFA.Trie Integers ::x_'~'_'0' not
R7709:7711 VFA.Trie Integers ::x_'~'_'0' not
R7696:7699 VFA.Trie <> addc def
R7701:7704 Coq.Init.Datatypes <> true constr
R7719:7723 Coq.Init.Datatypes <> false constr
R7727:7728 VFA.Trie Integers ::x_'~'_'1' not
R7732:7733 VFA.Trie Integers ::x_'~'_'0' not
R7738:7738 VFA.Trie Integers ::x_'~'_'1' not
R7753:7755 VFA.Trie Integers ::x_'~'_'1' not
R7739:7742 VFA.Trie <> addc def
R7744:7748 Coq.Init.Datatypes <> false constr
R7763:7767 Coq.Init.Datatypes <> false constr
R7771:7772 VFA.Trie Integers ::x_'~'_'1' not
R7775:7776 VFA.Trie Integers xH constr
R7781:7781 VFA.Trie Integers ::x_'~'_'0' not
R7788:7790 VFA.Trie Integers ::x_'~'_'0' not
R7782:7785 VFA.Trie Integers succ def
R7798:7802 Coq.Init.Datatypes <> false constr
R7806:7807 VFA.Trie Integers ::x_'~'_'0' not
R7811:7812 VFA.Trie Integers ::x_'~'_'1' not
R7817:7817 VFA.Trie Integers ::x_'~'_'1' not
R7832:7834 VFA.Trie Integers ::x_'~'_'1' not
R7818:7821 VFA.Trie <> addc def
R7823:7827 Coq.Init.Datatypes <> false constr
R7842:7846 Coq.Init.Datatypes <> false constr
R7850:7851 VFA.Trie Integers ::x_'~'_'0' not
R7855:7856 VFA.Trie Integers ::x_'~'_'0' not
R7861:7861 VFA.Trie Integers ::x_'~'_'0' not
R7876:7878 VFA.Trie Integers ::x_'~'_'0' not
R7862:7865 VFA.Trie <> addc def
R7867:7871 Coq.Init.Datatypes <> false constr
R7886:7890 Coq.Init.Datatypes <> false constr
R7894:7895 VFA.Trie Integers ::x_'~'_'0' not
R7898:7899 VFA.Trie Integers xH constr
R7905:7906 VFA.Trie Integers ::x_'~'_'1' not
R7914:7918 Coq.Init.Datatypes <> false constr
R7921:7922 VFA.Trie Integers xH constr
R7926:7927 VFA.Trie Integers ::x_'~'_'1' not
R7932:7932 VFA.Trie Integers ::x_'~'_'0' not
R7939:7941 VFA.Trie Integers ::x_'~'_'0' not
R7933:7936 VFA.Trie Integers succ def
R7949:7953 Coq.Init.Datatypes <> false constr
R7956:7957 VFA.Trie Integers xH constr
R7961:7962 VFA.Trie Integers ::x_'~'_'0' not
R7968:7969 VFA.Trie Integers ::x_'~'_'1' not
R7977:7981 Coq.Init.Datatypes <> false constr
R7984:7985 VFA.Trie Integers xH constr
R7988:7989 VFA.Trie Integers xH constr
R7996:7997 VFA.Trie Integers ::x_'~'_'0' not
R7994:7995 VFA.Trie Integers xH constr
R8005:8008 Coq.Init.Datatypes <> true constr
R8012:8013 VFA.Trie Integers ::x_'~'_'1' not
R8017:8018 VFA.Trie Integers ::x_'~'_'1' not
R8023:8023 VFA.Trie Integers ::x_'~'_'1' not
R8037:8039 VFA.Trie Integers ::x_'~'_'1' not
R8024:8027 VFA.Trie <> addc def
R8029:8032 Coq.Init.Datatypes <> true constr
R8047:8050 Coq.Init.Datatypes <> true constr
R8054:8055 VFA.Trie Integers ::x_'~'_'1' not
R8059:8060 VFA.Trie Integers ::x_'~'_'0' not
R8065:8065 VFA.Trie Integers ::x_'~'_'0' not
R8079:8081 VFA.Trie Integers ::x_'~'_'0' not
R8066:8069 VFA.Trie <> addc def
R8071:8074 Coq.Init.Datatypes <> true constr
R8089:8092 Coq.Init.Datatypes <> true constr
R8096:8097 VFA.Trie Integers ::x_'~'_'1' not
R8100:8101 VFA.Trie Integers xH constr
R8106:8106 VFA.Trie Integers ::x_'~'_'1' not
R8113:8115 VFA.Trie Integers ::x_'~'_'1' not
R8107:8110 VFA.Trie Integers succ def
R8123:8126 Coq.Init.Datatypes <> true constr
R8130:8131 VFA.Trie Integers ::x_'~'_'0' not
R8135:8136 VFA.Trie Integers ::x_'~'_'1' not
R8141:8141 VFA.Trie Integers ::x_'~'_'0' not
R8155:8157 VFA.Trie Integers ::x_'~'_'0' not
R8142:8145 VFA.Trie <> addc def
R8147:8150 Coq.Init.Datatypes <> true constr
R8165:8168 Coq.Init.Datatypes <> true constr
R8172:8173 VFA.Trie Integers ::x_'~'_'0' not
R8177:8178 VFA.Trie Integers ::x_'~'_'0' not
R8183:8183 VFA.Trie Integers ::x_'~'_'1' not
R8198:8200 VFA.Trie Integers ::x_'~'_'1' not
R8184:8187 VFA.Trie <> addc def
R8189:8193 Coq.Init.Datatypes <> false constr
R8208:8211 Coq.Init.Datatypes <> true constr
R8215:8216 VFA.Trie Integers ::x_'~'_'0' not
R8219:8220 VFA.Trie Integers xH constr
R8225:8225 VFA.Trie Integers ::x_'~'_'0' not
R8232:8234 VFA.Trie Integers ::x_'~'_'0' not
R8226:8229 VFA.Trie Integers succ def
R8242:8245 Coq.Init.Datatypes <> true constr
R8248:8249 VFA.Trie Integers xH constr
R8253:8254 VFA.Trie Integers ::x_'~'_'1' not
R8259:8259 VFA.Trie Integers ::x_'~'_'1' not
R8266:8268 VFA.Trie Integers ::x_'~'_'1' not
R8260:8263 VFA.Trie Integers succ def
R8276:8279 Coq.Init.Datatypes <> true constr
R8282:8283 VFA.Trie Integers xH constr
R8287:8288 VFA.Trie Integers ::x_'~'_'0' not
R8293:8293 VFA.Trie Integers ::x_'~'_'0' not
R8300:8302 VFA.Trie Integers ::x_'~'_'0' not
R8294:8297 VFA.Trie Integers succ def
R8310:8313 Coq.Init.Datatypes <> true constr
R8316:8317 VFA.Trie Integers xH constr
R8320:8321 VFA.Trie Integers xH constr
R8328:8329 VFA.Trie Integers ::x_'~'_'1' not
R8326:8327 VFA.Trie Integers xH constr
def 8350:8352 Integers add
R8360:8367 VFA.Trie Integers positive ind
R8372:8379 VFA.Trie Integers positive ind
R8384:8387 VFA.Trie Integers addc def
R8397:8397 VFA.Trie <> y var
R8395:8395 VFA.Trie <> x var
R8389:8393 Coq.Init.Datatypes <> false constr
prf 8453:8464 Integers succ_correct
R8501:8503 Coq.Init.Logic <> :type_scope:x_'='_x not
R8480:8491 VFA.Trie Integers positive2nat def
R8494:8497 VFA.Trie Integers succ def
R8499:8499 VFA.Trie <> p var
R8504:8504 Coq.Init.Datatypes <> S constr
R8507:8518 VFA.Trie Integers positive2nat def
R8520:8520 VFA.Trie <> p var
prf 9120:9131 Integers addc_correct
R9145:9148 Coq.Init.Datatypes <> bool ind
R9157:9164 VFA.Trie Integers positive ind
R9196:9206 Coq.Init.Logic <> :type_scope:x_'='_x not
R9171:9182 VFA.Trie Integers positive2nat def
R9185:9188 VFA.Trie Integers addc def
R9194:9194 VFA.Trie <> q var
R9192:9192 VFA.Trie <> p var
R9190:9190 VFA.Trie <> c var
R9244:9246 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9207:9207 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9226:9229 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9211:9211 VFA.Trie <> c var
R9230:9241 VFA.Trie Integers positive2nat def
R9243:9243 VFA.Trie <> p var
R9247:9258 VFA.Trie Integers positive2nat def
R9260:9260 VFA.Trie <> q var
prf 9308:9318 Integers add_correct
R9334:9341 VFA.Trie Integers positive ind
R9370:9372 Coq.Init.Logic <> :type_scope:x_'='_x not
R9348:9359 VFA.Trie Integers positive2nat def
R9362:9364 VFA.Trie Integers add def
R9368:9368 VFA.Trie <> q var
R9366:9366 VFA.Trie <> p var
R9387:9389 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9373:9384 VFA.Trie Integers positive2nat def
R9386:9386 VFA.Trie <> p var
R9390:9401 VFA.Trie Integers positive2nat def
R9403:9403 VFA.Trie <> q var
R9428:9430 VFA.Trie Integers add def
R9439:9450 VFA.Trie Integers addc_correct prfax
R9439:9450 VFA.Trie Integers addc_correct prfax
ind 10415:10424 Integers comparison
constr 10439:10440 Integers Eq
constr 10457:10458 Integers Lt
constr 10475:10476 Integers Gt
R10444:10453 VFA.Trie <> comparison ind
R10462:10471 VFA.Trie <> comparison ind
R10480:10489 VFA.Trie <> comparison ind
def 10551:10557 Integers compare
R10587:10587 VFA.Trie <> y var
R10584:10584 VFA.Trie <> x var
R10601:10602 VFA.Trie Integers ::x_'~'_'1' not
R10606:10607 VFA.Trie Integers ::x_'~'_'1' not
R10612:10618 VFA.Trie <> compare def
R10631:10632 VFA.Trie Integers ::x_'~'_'1' not
R10636:10637 VFA.Trie Integers ::x_'~'_'0' not
R10648:10654 VFA.Trie <> compare def
R10665:10666 VFA.Trie Integers Lt constr
R10671:10672 VFA.Trie Integers Lt constr
R10681:10682 VFA.Trie Integers Gt constr
R10695:10696 VFA.Trie Integers ::x_'~'_'1' not
R10699:10700 VFA.Trie Integers xH constr
R10705:10706 VFA.Trie Integers Gt constr
R10792:10793 VFA.Trie Integers Lt constr
prf 10809:10824 Integers positive2nat_pos
R10852:10854 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R10838:10849 VFA.Trie Integers positive2nat def
R10851:10851 VFA.Trie <> p var
prf 10914:10928 Integers compare_correct
R10952:10958 VFA.Trie Integers compare def
R10962:10962 VFA.Trie <> y var
R10960:10960 VFA.Trie <> x var
R10973:10974 VFA.Trie Integers Lt constr
R10993:10995 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R10979:10990 VFA.Trie Integers positive2nat def
R10992:10992 VFA.Trie <> x var
R10996:11007 VFA.Trie Integers positive2nat def
R11009:11009 VFA.Trie <> y var
R11015:11016 VFA.Trie Integers Eq constr
R11035:11037 Coq.Init.Logic <> :type_scope:x_'='_x not
R11021:11032 VFA.Trie Integers positive2nat def
R11034:11034 VFA.Trie <> x var
R11038:11049 VFA.Trie Integers positive2nat def
R11051:11051 VFA.Trie <> y var
R11057:11058 VFA.Trie Integers Gt constr
R11077:11079 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R11063:11074 VFA.Trie Integers positive2nat def
R11076:11076 VFA.Trie <> x var
R11080:11091 VFA.Trie Integers positive2nat def
R11093:11093 VFA.Trie <> y var
ind 11502:11502 Integers Z
constr 11517:11518 Integers Z0
constr 11528:11531 Integers Zpos
constr 11553:11556 Integers Zneg
R11522:11522 VFA.Trie <> Z ind
R11543:11546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11547:11547 VFA.Trie <> Z ind
R11535:11542 VFA.Trie Integers positive ind
R11568:11571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11572:11572 VFA.Trie <> Z ind
R11560:11567 VFA.Trie Integers positive ind
R11889:11896 VFA.Trie Integers <> mod
R12133:12140 Coq.Numbers.BinNums <> positive ind
R12297:12307 Coq.PArith.BinPos Pos compare def
R12362:12368 Coq.PArith.BinPos Pos add def
R12419:12423 Coq.ZArith.BinInt Z add def
mod 12741:12750 <> RatherSlow
def 12765:12774 RatherSlow total_mapz
R12790:12793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12794:12794 VFA.Trie <> A var
R12789:12789 Coq.Numbers.BinNums <> Z ind
def 12809:12813 RatherSlow empty
R12834:12834 VFA.Trie <> A var
R12839:12848 VFA.Trie RatherSlow total_mapz def
R12850:12850 VFA.Trie <> A var
R12864:12870 VFA.Trie <> default var
def 12884:12889 RatherSlow update
R12905:12914 VFA.Trie RatherSlow total_mapz def
R12916:12916 VFA.Trie <> A var
R12944:12944 Coq.Numbers.BinNums <> Z ind
R12952:12952 VFA.Trie <> A var
R12973:12977 Coq.ZArith.BinInt Z eqb def
R12981:12982 VFA.Trie <> x' var
R12979:12979 VFA.Trie <> x var
R12996:12996 VFA.Trie <> m var
R12998:12999 VFA.Trie <> x' var
R12989:12989 VFA.Trie <> v var
def 13012:13015 RatherSlow loop
R13025:13028 Coq.Init.Datatypes <> list ind
R13030:13030 Coq.Numbers.BinNums <> Z ind
R13037:13037 Coq.Numbers.BinNums <> Z ind
R13048:13057 VFA.Trie RatherSlow total_mapz def
R13059:13062 Coq.Init.Datatypes <> bool ind
R13067:13067 Coq.Numbers.BinNums <> Z ind
R13080:13084 VFA.Trie <> input var
R13095:13097 Coq.Init.Datatypes <> nil constr
R13102:13102 VFA.Trie <> c var
R13109:13110 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13120:13124 VFA.Trie <> table var
R13194:13197 VFA.Trie <> loop def
R13205:13210 VFA.Trie RatherSlow update def
R13220:13223 Coq.Init.Datatypes <> true constr
R13212:13216 VFA.Trie <> table var
R13202:13202 VFA.Trie <> c var
R13151:13154 VFA.Trie <> loop def
R13165:13169 VFA.Trie <> table var
R13161:13161 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13160:13160 VFA.Trie <> c var
def 13244:13253 RatherSlow collisions
R13263:13266 Coq.Init.Datatypes <> list ind
R13268:13268 Coq.Numbers.BinNums <> Z ind
R13274:13277 VFA.Trie RatherSlow loop def
R13288:13292 VFA.Trie RatherSlow empty def
R13294:13298 Coq.Init.Datatypes <> false constr
R13279:13283 VFA.Trie <> input var
def 13311:13323 RatherSlow collisions_pi
R13356:13358 Coq.Init.Logic <> :type_scope:x_'='_x not
R13326:13335 VFA.Trie RatherSlow collisions def
R13337:13337 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13339:13339 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13341:13341 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13343:13343 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13345:13345 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13347:13347 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13349:13349 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13351:13351 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13353:13353 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R13394:13403 VFA.Trie RatherSlow <> mod
R15103:15110 Coq.Numbers.BinNums <> positive ind
R15242:15244 Coq.Init.Logic <> :type_scope:x_'='_x not
R15245:15246 Coq.Numbers.BinNums <> xO constr
R15249:15250 Coq.Numbers.BinNums <> xI constr
R15253:15254 Coq.Numbers.BinNums <> xO constr
R15256:15257 Coq.Numbers.BinNums <> xH constr
ind 15559:15562 <> trie
constr 15584:15587 <> Leaf
constr 15604:15607 <> Node
R15591:15594 VFA.Trie <> trie ind
R15596:15596 VFA.Trie <> A var
R15617:15620 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15622:15625 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15632:15635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15636:15639 VFA.Trie <> trie ind
R15641:15641 VFA.Trie <> A var
R15626:15629 VFA.Trie <> trie ind
R15631:15631 VFA.Trie <> A var
R15621:15621 VFA.Trie <> A var
R15611:15614 VFA.Trie <> trie ind
R15616:15616 VFA.Trie <> A var
R15654:15657 VFA.Trie <> Leaf constr
R15654:15657 VFA.Trie <> Leaf constr
R15674:15677 VFA.Trie <> Node constr
R15674:15677 VFA.Trie <> Node constr
def 15702:15711 <> trie_table
R15735:15737 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R15734:15734 VFA.Trie <> A var
R15738:15741 VFA.Trie <> trie ind
R15743:15743 VFA.Trie <> A var
def 15764:15768 <> empty
R15790:15790 VFA.Trie <> A var
R15795:15804 VFA.Trie <> trie_table def
R15806:15806 VFA.Trie <> A var
R15817:15817 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15825:15826 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15831:15831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15818:15824 VFA.Trie <> default var
R15827:15830 VFA.Trie <> Leaf constr
def 15844:15847 <> look
R15869:15869 VFA.Trie <> A var
R15876:15883 Coq.Numbers.BinNums <> positive ind
R15890:15893 VFA.Trie <> trie ind
R15895:15895 VFA.Trie <> A var
R15899:15899 VFA.Trie <> A var
R15914:15914 VFA.Trie <> m var
R15927:15930 VFA.Trie <> Leaf constr
R15935:15941 VFA.Trie <> default var
R15949:15952 VFA.Trie <> Node constr
R15977:15977 VFA.Trie <> i var
R15994:15995 Coq.Numbers.BinNums <> xH constr
R16012:16013 Coq.Numbers.BinNums <> xO constr
R16021:16024 VFA.Trie <> look def
R16026:16032 VFA.Trie <> default var
R16049:16050 Coq.Numbers.BinNums <> xI constr
R16058:16061 VFA.Trie <> look def
R16063:16069 VFA.Trie <> default var
def 16109:16114 <> lookup
R16130:16137 Coq.Numbers.BinNums <> positive ind
R16144:16153 VFA.Trie <> trie_table def
R16155:16155 VFA.Trie <> A var
R16160:16160 VFA.Trie <> A var
R16168:16171 VFA.Trie <> look def
R16184:16186 Coq.Init.Datatypes <> snd def
R16188:16188 VFA.Trie <> t var
R16181:16181 VFA.Trie <> i var
R16174:16176 Coq.Init.Datatypes <> fst def
R16178:16178 VFA.Trie <> t var
def 16202:16204 <> ins
R16228:16235 Coq.Numbers.BinNums <> positive ind
R16242:16242 VFA.Trie <> A var
R16249:16252 VFA.Trie <> trie ind
R16254:16254 VFA.Trie <> A var
R16258:16261 VFA.Trie <> trie ind
R16263:16263 VFA.Trie <> A var
R16278:16278 VFA.Trie <> m var
R16291:16294 VFA.Trie <> Leaf constr
R16313:16313 VFA.Trie <> i var
R16330:16331 Coq.Numbers.BinNums <> xH constr
R16336:16339 VFA.Trie <> Node constr
R16348:16351 VFA.Trie <> Leaf constr
R16346:16346 VFA.Trie <> a var
R16341:16344 VFA.Trie <> Leaf constr
R16363:16364 Coq.Numbers.BinNums <> xO constr
R16372:16375 VFA.Trie <> Node constr
R16409:16412 VFA.Trie <> Leaf constr
R16401:16407 VFA.Trie <> default var
R16378:16380 VFA.Trie <> ins def
R16395:16398 VFA.Trie <> Leaf constr
R16393:16393 VFA.Trie <> a var
R16382:16388 VFA.Trie <> default var
R16424:16425 Coq.Numbers.BinNums <> xI constr
R16433:16436 VFA.Trie <> Node constr
R16452:16454 VFA.Trie <> ins def
R16469:16472 VFA.Trie <> Leaf constr
R16467:16467 VFA.Trie <> a var
R16456:16462 VFA.Trie <> default var
R16443:16449 VFA.Trie <> default var
R16438:16441 VFA.Trie <> Leaf constr
R16493:16496 VFA.Trie <> Node constr
R16521:16521 VFA.Trie <> i var
R16538:16539 Coq.Numbers.BinNums <> xH constr
R16544:16547 VFA.Trie <> Node constr
R16551:16551 VFA.Trie <> a var
R16565:16566 Coq.Numbers.BinNums <> xO constr
R16574:16577 VFA.Trie <> Node constr
R16580:16582 VFA.Trie <> ins def
R16595:16595 VFA.Trie <> a var
R16584:16590 VFA.Trie <> default var
R16614:16615 Coq.Numbers.BinNums <> xI constr
R16623:16626 VFA.Trie <> Node constr
R16633:16635 VFA.Trie <> ins def
R16648:16648 VFA.Trie <> a var
R16637:16643 VFA.Trie <> default var
def 16686:16691 <> insert
R16707:16714 Coq.Numbers.BinNums <> positive ind
R16721:16721 VFA.Trie <> A var
R16728:16737 VFA.Trie <> trie_table def
R16739:16739 VFA.Trie <> A var
R16761:16770 VFA.Trie <> trie_table def
R16772:16772 VFA.Trie <> A var
R16779:16779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16785:16786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16810:16810 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16780:16782 Coq.Init.Datatypes <> fst def
R16784:16784 VFA.Trie <> t var
R16787:16789 VFA.Trie <> ins def
R16804:16806 Coq.Init.Datatypes <> snd def
R16808:16808 VFA.Trie <> t var
R16801:16801 VFA.Trie <> a var
R16799:16799 VFA.Trie <> i var
R16792:16794 Coq.Init.Datatypes <> fst def
R16796:16796 VFA.Trie <> t var
def 16825:16833 <> three_ten
R16837:16846 VFA.Trie <> trie_table def
R16848:16851 Coq.Init.Datatypes <> bool ind
R16857:16862 VFA.Trie <> insert def
R16872:16877 VFA.Trie <> insert def
R16888:16892 VFA.Trie <> empty def
R16894:16898 Coq.Init.Datatypes <> false constr
R16882:16885 Coq.Init.Datatypes <> true constr
R16866:16869 Coq.Init.Datatypes <> true constr
R16920:16928 VFA.Trie <> three_ten def
R17125:17127 Coq.Lists.List <> map def
R17159:17159 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17161:17161 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17163:17163 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17165:17165 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17167:17167 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17169:17169 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17139:17144 VFA.Trie <> lookup def
R17148:17156 VFA.Trie <> three_ten def
R17146:17146 VFA.Trie <> i var
mod 17364:17373 <> FastEnough
def 17386:17389 FastEnough loop
R17399:17402 Coq.Init.Datatypes <> list ind
R17404:17411 Coq.Numbers.BinNums <> positive ind
R17418:17420 Coq.Init.Datatypes <> nat ind
R17431:17440 VFA.Trie <> trie_table def
R17442:17445 Coq.Init.Datatypes <> bool ind
R17450:17452 Coq.Init.Datatypes <> nat ind
R17465:17469 VFA.Trie <> input var
R17480:17482 Coq.Init.Datatypes <> nil constr
R17487:17487 VFA.Trie <> c var
R17494:17495 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17505:17510 VFA.Trie <> lookup def
R17514:17518 VFA.Trie <> table var
R17586:17589 VFA.Trie <> loop def
R17597:17602 VFA.Trie <> insert def
R17611:17615 VFA.Trie <> table var
R17606:17609 Coq.Init.Datatypes <> true constr
R17594:17594 VFA.Trie <> c var
R17543:17546 VFA.Trie <> loop def
R17557:17561 VFA.Trie <> table var
R17553:17553 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R17554:17554 VFA.Trie <> c var
def 17636:17645 FastEnough collisions
R17655:17658 Coq.Init.Datatypes <> list ind
R17660:17667 Coq.Numbers.BinNums <> positive ind
R17673:17676 VFA.Trie FastEnough loop def
R17687:17691 VFA.Trie <> empty def
R17693:17697 Coq.Init.Datatypes <> false constr
R17678:17682 VFA.Trie <> input var
def 17710:17722 FastEnough collisions_pi
R17762:17764 Coq.Init.Logic <> :type_scope:x_'='_x not
R17725:17734 VFA.Trie FastEnough collisions def
R17736:17736 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17738:17738 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17740:17740 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17742:17742 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17744:17744 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17746:17746 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17748:17748 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17750:17750 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17752:17752 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R17798:17807 VFA.Trie FastEnough <> mod
def 18811:18855 <> manual_grade_for_successor_of_Z_constant_time
R18859:18864 Coq.Init.Datatypes <> option ind
R18867:18870 Coq.Init.Datatypes <> prod ind
R18876:18881 Coq.Strings.String <> string ind
R18872:18874 Coq.Init.Datatypes <> nat ind
R18887:18890 Coq.Init.Datatypes <> None constr
prf 19949:19957 <> look_leaf
R19973:19973 VFA.Trie <> A var
R19992:19994 Coq.Init.Logic <> :type_scope:x_'='_x not
R19979:19982 VFA.Trie <> look def
R19988:19991 VFA.Trie <> Leaf constr
R19986:19986 VFA.Trie <> j var
R19984:19984 VFA.Trie <> a var
R19995:19995 VFA.Trie <> a var
prf 20134:20146 <> look_ins_same
R20167:20167 VFA.Trie <> A var
R20195:20197 Coq.Init.Logic <> :type_scope:x_'='_x not
R20173:20176 VFA.Trie <> look def
R20183:20185 VFA.Trie <> ins def
R20193:20193 VFA.Trie <> t var
R20191:20191 VFA.Trie <> v var
R20189:20189 VFA.Trie <> k var
R20187:20187 VFA.Trie <> a var
R20180:20180 VFA.Trie <> k var
R20178:20178 VFA.Trie <> a var
R20198:20198 VFA.Trie <> v var
prf 20356:20369 <> look_ins_other
R20392:20392 VFA.Trie <> A var
R20407:20410 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20433:20435 Coq.Init.Logic <> :type_scope:x_'='_x not
R20411:20414 VFA.Trie <> look def
R20421:20423 VFA.Trie <> ins def
R20431:20431 VFA.Trie <> t var
R20429:20429 VFA.Trie <> v var
R20427:20427 VFA.Trie <> k var
R20425:20425 VFA.Trie <> a var
R20418:20418 VFA.Trie <> j var
R20416:20416 VFA.Trie <> a var
R20436:20439 VFA.Trie <> look def
R20445:20445 VFA.Trie <> t var
R20443:20443 VFA.Trie <> j var
R20441:20441 VFA.Trie <> a var
R20402:20405 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R20401:20401 VFA.Trie <> j var
R20406:20406 VFA.Trie <> k var
def 20839:20845 <> nat2pos
R20851:20853 Coq.Init.Datatypes <> nat ind
R20858:20865 Coq.Numbers.BinNums <> positive ind
R20870:20884 Coq.PArith.BinPos Pos of_succ_nat def
R20886:20886 VFA.Trie <> n var
def 20900:20906 <> pos2nat
R20912:20919 Coq.Numbers.BinNums <> positive ind
R20924:20926 Coq.Init.Datatypes <> nat ind
R20931:20934 Coq.Init.Peano <> pred syndef
R20937:20946 Coq.PArith.BinPos Pos to_nat def
R20948:20948 VFA.Trie <> n var
prf 20959:20969 <> pos2nat2pos
R21001:21003 Coq.Init.Logic <> :type_scope:x_'='_x not
R20982:20988 VFA.Trie <> nat2pos def
R20991:20997 VFA.Trie <> pos2nat def
R20999:20999 VFA.Trie <> p var
R21004:21004 VFA.Trie <> p var
R21069:21075 VFA.Trie <> nat2pos def
R21078:21084 VFA.Trie <> pos2nat def
R21099:21108 Coq.PArith.Pnat Pos2Nat id thm
R21099:21108 Coq.PArith.Pnat Pos2Nat id thm
R21099:21108 Coq.PArith.Pnat Pos2Nat id thm
R21129:21138 Coq.PArith.BinPos Pos to_nat def
R21129:21138 Coq.PArith.BinPos Pos to_nat def
R21162:21175 Coq.PArith.Pnat Pos2Nat is_pos thm
R21162:21175 Coq.PArith.Pnat Pos2Nat is_pos thm
R21199:21213 Coq.PArith.BinPos Pos of_nat_succ thm
R21199:21213 Coq.PArith.BinPos Pos of_nat_succ thm
R21199:21213 Coq.PArith.BinPos Pos of_nat_succ thm
prf 21241:21251 <> nat2pos2nat
R21283:21285 Coq.Init.Logic <> :type_scope:x_'='_x not
R21264:21270 VFA.Trie <> pos2nat def
R21273:21279 VFA.Trie <> nat2pos def
R21281:21281 VFA.Trie <> i var
R21286:21286 VFA.Trie <> i var
R21351:21357 VFA.Trie <> nat2pos def
R21360:21366 VFA.Trie <> pos2nat def
R21377:21395 Coq.PArith.Pnat SuccNat2Pos id_succ thm
R21377:21395 Coq.PArith.Pnat SuccNat2Pos id_succ thm
R21377:21395 Coq.PArith.Pnat SuccNat2Pos id_succ thm
prf 21547:21563 <> pos2nat_injective
R21599:21602 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21604:21604 Coq.Init.Logic <> :type_scope:x_'='_x not
R21603:21603 VFA.Trie <> p var
R21605:21605 VFA.Trie <> q var
R21587:21589 Coq.Init.Logic <> :type_scope:x_'='_x not
R21578:21584 VFA.Trie <> pos2nat def
R21586:21586 VFA.Trie <> p var
R21590:21596 VFA.Trie <> pos2nat def
R21598:21598 VFA.Trie <> q var
prf 21644:21660 <> nat2pos_injective
R21696:21699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21701:21701 Coq.Init.Logic <> :type_scope:x_'='_x not
R21700:21700 VFA.Trie <> i var
R21702:21702 VFA.Trie <> j var
R21684:21686 Coq.Init.Logic <> :type_scope:x_'='_x not
R21675:21681 VFA.Trie <> nat2pos def
R21683:21683 VFA.Trie <> i var
R21687:21693 VFA.Trie <> nat2pos def
R21695:21695 VFA.Trie <> j var
def 22048:22054 <> is_trie
R22070:22079 VFA.Trie <> trie_table def
R22081:22081 VFA.Trie <> A var
def 22541:22548 <> abstract
R22564:22573 VFA.Trie <> trie_table def
R22575:22575 VFA.Trie <> A var
R22582:22584 Coq.Init.Datatypes <> nat ind
R22589:22589 VFA.Trie <> A var
R22596:22601 VFA.Trie <> lookup def
R22615:22615 VFA.Trie <> t var
R22604:22610 VFA.Trie <> nat2pos def
R22612:22612 VFA.Trie <> n var
def 22630:22632 <> Abs
R22648:22657 VFA.Trie <> trie_table def
R22659:22659 VFA.Trie <> A var
R22666:22674 VFA.Maps <> total_map def
R22676:22676 VFA.Trie <> A var
R22694:22696 Coq.Init.Logic <> :type_scope:x_'='_x not
R22684:22691 VFA.Trie <> abstract def
R22693:22693 VFA.Trie <> t var
R22697:22697 VFA.Trie <> m var
prf 22988:23000 <> empty_is_trie
R23024:23024 VFA.Trie <> A var
R23028:23034 VFA.Trie <> is_trie prfax
R23037:23041 VFA.Trie <> empty def
R23043:23049 VFA.Trie <> default var
prf 23091:23104 <> insert_is_trie
R23126:23135 VFA.Trie <> trie_table def
R23137:23137 VFA.Trie <> A var
R23153:23156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23157:23163 VFA.Trie <> is_trie prfax
R23166:23171 VFA.Trie <> insert def
R23177:23177 VFA.Trie <> t var
R23175:23175 VFA.Trie <> x var
R23173:23173 VFA.Trie <> i var
R23144:23150 VFA.Trie <> is_trie prfax
R23152:23152 VFA.Trie <> t var
prf 23467:23478 <> empty_relate
R23502:23502 VFA.Trie <> A var
R23510:23512 VFA.Trie <> Abs def
R23531:23537 VFA.Maps <> t_empty def
R23539:23545 VFA.Trie <> default var
R23515:23519 VFA.Trie <> empty def
R23521:23527 VFA.Trie <> default var
prf 23739:23751 <> lookup_relate
R23771:23780 VFA.Trie <> trie_table def
R23782:23782 VFA.Trie <> A var
R23801:23804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23812:23815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23826:23828 Coq.Init.Logic <> :type_scope:x_'='_x not
R23816:23821 VFA.Trie <> lookup def
R23825:23825 VFA.Trie <> t var
R23823:23823 VFA.Trie <> i var
R23829:23829 VFA.Trie <> m var
R23832:23838 VFA.Trie <> pos2nat def
R23840:23840 VFA.Trie <> i var
R23805:23807 VFA.Trie <> Abs def
R23811:23811 VFA.Trie <> m var
R23809:23809 VFA.Trie <> t var
R23792:23798 VFA.Trie <> is_trie prfax
R23800:23800 VFA.Trie <> t var
prf 24380:24392 <> insert_relate
R24412:24412 VFA.Trie <> A var
R24435:24442 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24452:24459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24460:24462 VFA.Trie <> Abs def
R24480:24487 VFA.Maps <> t_update def
R24505:24505 VFA.Trie <> v var
R24494:24500 VFA.Trie <> pos2nat def
R24502:24502 VFA.Trie <> k var
R24489:24491 VFA.Trie <> cts var
R24465:24470 VFA.Trie <> insert def
R24476:24476 VFA.Trie <> t var
R24474:24474 VFA.Trie <> v var
R24472:24472 VFA.Trie <> k var
R24443:24445 VFA.Trie <> Abs def
R24449:24451 VFA.Trie <> cts var
R24447:24447 VFA.Trie <> t var
R24426:24432 VFA.Trie <> is_trie prfax
R24434:24434 VFA.Trie <> t var
def 24653:24665 <> Abs_three_ten
R24672:24674 VFA.Trie <> Abs def
R24738:24745 VFA.Maps <> t_update def
R24804:24807 Coq.Init.Datatypes <> true constr
R24793:24799 VFA.Trie <> pos2nat def
R24748:24755 VFA.Maps <> t_update def
R24786:24789 Coq.Init.Datatypes <> true constr
R24774:24780 VFA.Trie <> pos2nat def
R24758:24764 VFA.Maps <> t_empty def
R24766:24770 Coq.Init.Datatypes <> false constr
R24684:24689 VFA.Trie <> insert def
R24699:24704 VFA.Trie <> insert def
R24715:24719 VFA.Trie <> empty def
R24721:24725 Coq.Init.Datatypes <> false constr
R24709:24712 Coq.Init.Datatypes <> true constr
R24693:24696 Coq.Init.Datatypes <> true constr
R24829:24841 VFA.Trie <> insert_relate prfax
R24829:24841 VFA.Trie <> insert_relate prfax
R24872:24884 VFA.Trie <> insert_relate prfax
R24872:24884 VFA.Trie <> insert_relate prfax
R24915:24926 VFA.Trie <> empty_relate prfax
R24915:24926 VFA.Trie <> empty_relate prfax
